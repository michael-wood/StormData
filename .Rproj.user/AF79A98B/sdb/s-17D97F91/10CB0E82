{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Storm Data\"\nauthor: \"Michael Wood\"\ndate: \"January 30, 2018\"\noutput: html_document\n---\n\n# Data Processing                             \n``` {r data_processing }\n#!/usr/bin/env Rscript\n\nlibrary(ggplot2)\n\n# Set fileURL and download data if necessary                                    \nfileURL <- \"\"\nfileDL <- \"./data/repdata_data_StormData.csv.bz2\"                                                  \nif(!file.exists(fileDL)){                                                       \n        download.file(fileURL, destfile=fileDL, method=\"curl\")                  \n}                                                                               \ncsvData <- read.csv(fileDL)\n\nfatalByEvt <- as.data.frame(\n                  tapply(csvData$FATALITIES, csvData$EVTYPE, FUN=sum))\ncolnames(fatalByEvt) <- c(\"Count\")\n\ninjuryByEvt <- as.data.frame(\n                  tapply(csvData$INJURIES, csvData$EVTYPE, FUN=sum))\ncolnames(injuryByEvt) <- c(\"Count\")\n\npropDmgByEvt <- as.data.frame(\n                  tapply(csvData$PROPDMG, csvData$EVTYPE, FUN=sum))\ncolnames(propDmgByEvt) <- c(\"Count\")\n\ncropDmgByEvt <- as.data.frame(\n                  tapply(csvData$CROPDMG, csvData$EVTYPE, FUN=sum))\ncolnames(cropDmgByEvt) <- c(\"Count\")\n```\n\n## Fatalities\n```{r fatalities, echo=FALSE}\ntop5Fatal <- as.data.frame(head(sort(fatalByEvt$Count, decreasing=TRUE), n=5))\n\ntotalFatal <- sum(fatalByEvt$Count)\ntapply(top5Fatal$Count, ` )\n```\n\n## Injuries\n```{r injuries, echo=FALSE}\ntop5Injury <- as.data.frame(head(sort(injuryByEvt$`tapply(csvData$INJURIES, csvData$EVTYPE, FUN = sum)`, decreasing=TRUE), n=5))\ntotalInjury <- sum(sort(injuryByEvt$`tapply(csvData$INJURIES, csvData$EVTYPE, FUN = sum)`, decreasing=TRUE))\n```\n\n## Property Damage\n```{r propDamage, echo=FALSE}\ntop5Property <- as.data.frame(head(sort(propDmgByEvt$`tapply(csvData$PROPDMG, csvData$EVTYPE, FUN = sum)`, decreasing=TRUE), n=5))\ntotalInjury <- sum(sort(propDmgByEvt$`tapply(csvData$PROPDMG, csvData$EVTYPE, FUN = sum)`, decreasing=TRUE))\n```\n\n## Crop Damage\n```{r cropDamage, echo=FALSE}\ntop5Crop <- as.data.frame(head(sort(cropDmgByEvt$`tapply(csvData$CROPDMG, csvData$EVTYPE, FUN = sum)`, decreasing=TRUE), n=5))\ntotalInjury <- sum(sort(cropDmgByEvt$`tapply(csvData$CROPDMG, csvData$EVTYPE, FUN = sum)`, decreasing=TRUE))\n```\n\n\n# Results\n\n\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n## R Markdown\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n```{r cars}\nsummary(cars)\n```\n\n## Including Plots\n\nYou can also embed plots, for example:\n\n```{r pressure, echo=FALSE}\nplot(pressure)\n```\n\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n",
    "created" : 1517333448034.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1464973526",
    "id" : "10CB0E82",
    "lastKnownWriteTime" : 1517423929,
    "last_content_update" : 1517423929742,
    "path" : "/home/morthwyl/Dropbox/Development/R/Coursera/Reproducible Research/StormData/PGA_CourseProject2.Rmd",
    "project_path" : "PGA_CourseProject2.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}